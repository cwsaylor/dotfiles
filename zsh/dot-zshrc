################################################################################
# ZSH
################################################################################
DISABLE_UPDATE_PROMPT=true
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME=""
plugins=(git zsh-autosuggestions zsh-syntax-highlighting)
source $ZSH/oh-my-zsh.sh

################################################################################
# Set tab title
################################################################################
# Disable automatic title setting by applications
DISABLE_AUTO_TITLE="true"

# Function to set iTerm2 tab title to the current working directory
iterm_tab_title() {
  echo -ne "\e]1;${PWD##*/}\a" # Displays only the current directory name
  # For full path, use: echo -ne "\e]1;$PWD\a"
}

# Add a precmd hook to call the function before each prompt
add-zsh-hook precmd iterm_tab_title

################################################################################
# Add .local/bin for Oh my posh, nvm, etc
################################################################################
if [[ -d "$HOME/.local/bin" ]]; then
  export PATH=$PATH:$HOME/.local/bin
fi

################################################################################
# Prompt
################################################################################
if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  # eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/chris.toml)"
  eval "$(starship init zsh)"
fi

################################################################################
# Set terminal editor
################################################################################
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

################################################################################
# MySQL and PostgreSQL library config
################################################################################
if [[ -d "/opt/homebrew/opt/mysql-client" ]]; then
  export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/mysql-client/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/mysql-client/include"
  export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql-client/lib/pkgconfig"
fi

if [[ -d "/opt/homebrew/opt/libpq" ]]; then
  export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"
  export PKG_CONFIG_PATH="/opt/homebrew/opt/libpq/lib/pkgconfig"
fi

################################################################################
# fzf
################################################################################
if [[ -d "$HOME/.fzf" ]]; then
  export PATH=$PATH:$HOME/.fzf/bin
  source "$HOME/.fzf/shell/completion.zsh"
  # source "$HOME/.fzf/shell/key-bindings.zsh"
  alias f="fzf"
elif command -v fzf &> /dev/null; then
  source <(fzf --zsh)
  alias f="fzf"
fi

################################################################################
# zoxide
################################################################################
if command -v zoxide &> /dev/null; then
  eval "$(zoxide init zsh)"
fi

################################################################################
# Aliases
################################################################################
alias claude="/Users/chris/.claude/local/claude"

alias weather="curl wttr.in/95492\?u"

if command -v claude &> /dev/null; then
  alias cl="claude"
fi

if command -v cursor &> /dev/null; then
  alias cu="cursor"
fi

if command -v cursor-agent &> /dev/null; then
  alias ca="cursor-agent"
fi

if command -v gitmoni &> /dev/null; then
  alias gim="gitmoni"
fi

if command -v kubectl &> /dev/null; then
  alias k="kubectl"
fi

if command -v lazygit &> /dev/null; then
  alias lg="lazygit"
fi

if command -v nvim  &> /dev/null; then
  alias nv="nvim"
fi

if command -v npm &> /dev/null; then
  alias np="npm"
fi

alias pn="pnpm"

alias py="python"

if command -v eza &> /dev/null; then
  alias e="eza --icons"
  alias ea="eza --icons -a"
  alias el="eza --icons -l -h"
  alias ela="eza --icons -l -a -h"
  alias et="eza --icons -T"
  alias e1="eza --icons -T --level=1"
  alias e2="eza --icons -T --level=2"
  alias e3="eza --icons -T --level=3"
  alias e4="eza --icons -T --level=4"
fi

################################################################################
# Update function for installed tools
################################################################################
update_ruby() {
  current_folder=$(pwd)
  cd ~/.rbenv && \
  git pull && \
  cd ~/.rbenv/plugins/ruby-build && \
  git pull && \
  cd "$current_folder"
}

update() {
  brew update && \
  brew upgrade && \
  npm install -g @openai/codex && \
  npm install -g @google/gemini-cli@latest && \
  claude update && \
  cursor-agent update && \
  deno upgrade && \
  bun upgrade
}

################################################################################
# Android studio and Flutter
################################################################################
if [[ -d "$HOME/Library/Android/sdk" ]]; then
  export ANDROID_HOME="$HOME/Library/Android/sdk"
  export PATH="$ANDROID_HOME/tools:$PATH"
  export PATH="$ANDROID_HOME/tools/bin:$PATH"
  export PATH="$ANDROID_HOME/platform-tools:$PATH"
fi

if [[ -d "$HOME/development/flutter/bin" ]]; then
  export PATH="$HOME/development/flutter/bin:$PATH"
fi

################################################################################
# nvm
################################################################################
if [[ -d "$HOME/.nvm" ]]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

################################################################################
# Go
################################################################################
if [[ -d "/usr/local/go/bin" ]]; then
  export PATH=$PATH:/usr/local/go/bin
fi

if [[ -d "$HOME/go/bin" ]]; then
  export PATH=$PATH:$HOME/go/bin
fi
################################################################################
# Deno
################################################################################
if [[ -d "$HOME/.deno" ]]; then
  . "$HOME/.deno/env"
fi

# Add deno completions to search path
if [[ ":$FPATH:" != *":$HOME/.zsh/completions:"* ]]; then
  export FPATH="$HOME/.zsh/completions:$FPATH";
fi

################################################################################
# env vars
################################################################################

if [[ -f "$HOME/.env_vars" ]]; then
  . "$HOME/.env_vars"
fi

################################################################################
# docker command line completion 
################################################################################
if [[ -d "$HOME/.docker" ]]; then
  fpath=($HOME/.docker/completions $fpath)
  autoload -Uz compinit
  compinit
fi

################################################################################
# pnpm
################################################################################
export PNPM_HOME="/Users/chris/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

################################################################################
# bun & completions
################################################################################
[ -s "/Users/chris/.bun/_bun" ] && source "/Users/chris/.bun/_bun"

export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

################################################################################
# fastfetch
################################################################################
fastfetch

